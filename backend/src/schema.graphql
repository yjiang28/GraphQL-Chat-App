# import * from "./generated/prisma.graphql"
type SuccessMessage {
	message: String!
}

type Mutation {
	signUp(email: String!, password: String!, username: String!): User!
	signIn(email: String!, password: String!): User!
	signOut: SuccessMessage!
	sendFriendRequest(username: String!): Notification!
	acceptFriendRequest(id: ID!): Channel!
	sendMessage(channelId: ID!, message: String!): Message!
}

type Query {
	me: User
	users(where: UserWhereInput, orderBy: UserOrderByInput): [User]!
	user(where: UserWhereUniqueInput!): User
	searchUsers(username: String!): [User]!
	channel(where: ChannelWhereUniqueInput!): Channel
	channels(
		where: ChannelWhereInput
		orderBy: ChannelOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
	): [Channel]!
	latestActiveChannel: Channel
	messages(
		where: MessageWhereInput
		orderBy: MessageOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
	): [Message]!
	channelMessages(channelId: ID!): [Message]!
}

type Subscription {
	notification(userId: ID!): Notification!
	message(userId: ID!): Message!
}
